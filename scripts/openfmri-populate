#!/bin/bash
#emacs: -*- mode: shell-script; c-basic-offset: 4; tab-width: 4; indent-tabs-mode: t -*- 
#ex: set sts=4 ts=4 sw=4 noet:
#-------------------------- =+- Shell script -+= --------------------------
#
# @file      openfmri-populate
# @date      Tue Mar 11 16:53:37 2014
# @brief
#
#
#  Yaroslav Halchenko                                            Dartmouth
#  web:     http://www.onerussian.com                              College
#  e-mail:  yoh@onerussian.com                              ICQ#: 60653192
#
# DESCRIPTION (NOTES):
#   A little helper script to populate subjects for the raiders dataset
#   within openfmri (not yet OBIDS) layout
#
# COPYRIGHT: Yaroslav Halchenko 2015
#
# LICENSE: MIT
#
#  Permission is hereby granted, free of charge, to any person obtaining a copy
#  of this software and associated documentation files (the "Software"), to deal
#  in the Software without restriction, including without limitation the rights
#  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
#  copies of the Software, and to permit persons to whom the Software is
#  furnished to do so, subject to the following conditions:
#
#  The above copyright notice and this permission notice shall be included in
#  all copies or substantial portions of the Software.
#
#  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
#  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
#  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
#  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
#  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
#  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
#  THE SOFTWARE.
#
#-----------------\____________________________________/------------------

set -eu
CMD=

_info() {
	echo "I: $@"
}

_cp() {
    tfile=$(echo $@ | sed -e 's,.* ,,g')
    #echo "TARGET: $tfile"
    # verify that all files but last exist
    echo $@ | sed -e 's, [^ ]*$,,g' | \
    while read f; do
        [ -e $f ] || { echo "File $f not found"; exit 1; }
    done
    if [ ! -e "$tfile" ]; then
        $CMD cp -a --reflink=auto "$@"
    fi
}

topdir=/data/movies/raiders/dartmouth
ofmridir=/data/movies/raiders/yoh-annex/data-private
subjects=$topdir

_info "Output under $ofmridir"
 
mkdir -p $ofmridir
cat >| $ofmridir/scan_key.txt <<EOF
TR 2.5
EOF

task=task002
# now results of swaroop's preprocessing
prepcode=_sw1
echo "$task Raiders movie. Dartmouth sample #1 (8ch coil, 8 runs)" >| $ofmridir/task_key.txt

# this assignment script is not shared
./subjects_assignment | \
while read isubj subjcode ; do
	subjpath=$subjects/$subjcode
	subjpreppath=$subjects/preprocessed/$subjcode
	subj=$(printf "sub%03d" $isubj)
	_info "Subject $isubj $subjpath subj $subjpath -> $subj"
	ofsubjdir=$ofmridir/$subj
	mkdir -p $ofsubjdir
	# BOLD images
    # orig bold was in PAR/REC
    origboldparrec=$(/bin/ls $subjpath/orig/*FEEPI*.PAR | sed -e 's,\.PAR$,,g' | sort -n)
    echo "Orig par: $origboldparrec"
    nruns=$(echo "$origboldparrec" | wc -l)
    if [ $nruns != 8 ]; then
        echo "E: must have 8 runs"
        exit 1
    fi
    run=0
	for parrec in $origboldparrec; do
        run=$(($run+1))
		rundir=$(printf "${task}_run%03d" $run)
        rundirfull=$ofsubjdir/BOLD/$rundir
        taskdirfull=$ofsubjdir/BOLD/$task
		mkdir -p $rundirfull $taskdirfull

        for ext in PAR REC; do
           _cp $parrec.$ext $rundirfull/bold.$ext
        done

        # also copy the converted .nii.gz
        _cp $subjpath/bold0$run.nii.gz $rundirfull/bold.nii.gz

        #_cp $subjpreppath/bold_$run.nii.gz $rundirfull/bold${prepcode}_stc.nii.gz
        _cp $subjpreppath/bold_${run}_reg_despike_dt_bp.nii.gz $rundirfull/bold${prepcode}_stc_reg_despike_dt_bp.nii.gz
        _cp $subjpreppath/mot_params${run}.1D $rundirfull/bold${prepcode}_stc_moco.1D
        # TODO brainmask and graymasks from $subpreppath
	done
    _cp $subjpreppath/bold_reg_mean.nii.gz $taskdirfull/bold${prepcode}_stc_reg_mean.nii.gz
    # not everyone has it
    #_cp $subjpreppath/bold_reg_mean_mni.nii.gz $taskdirfull/bold${prepcode}_stc_reg_mean_mni.nii.gz
    # And now joint time series
    _cp $subjpreppath/${subjcode}_BMC_mni.nii.gz  $taskdirfull/bold${prepcode}_stc_reg_despike_dt_bp_mni.nii.gz
    #TODO? _cp $subjpreppath/${subjcode}_BMC_4mm_mni.nii.gz  $taskdirfull/bold${prepcode}_stc_reg_despike_dt_bp_mni_4mm.nii.gz
    #break # TODO TEMP
done

# some masks common across all the subjects
mkdir -p $ofmridir/masks/BOLD
# originates from protected /home/swaroop/mvpa_linux_bkup/raiders_dartmouth/mask_stuff/MNI_mask_vt.nii.gz
_cp /tmp/MNI_mask_vt.nii.gz $ofmridir/masks/BOLD/vt${prepcode}_mni.nii.gz

# And now dump some hyperaligned data
mkdir -p $ofmridir/aligned/BOLD
for f in $topdir/preprocessed/*_8ch_*hdf5*; do 
    f_=$(basename $f)
    nf=$(echo $f_ | sed -e "s,^raiders_dartmouth_8ch_,bold_hyper${prepcode}_,g" -e "s,^surfslhypmappersmni_raiders_dartmouth_8ch_,bold_surfslhyper${prepcode}_,g");
    _cp $f $ofmridir/aligned/BOLD/$nf
done

echo "DONE"
